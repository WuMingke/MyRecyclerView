RecyclerView 布局
    dispatchLayout()
    作用
        放置View
        记录布局阶段View的信息
        处理动画
    三个阶段
        预布局 dispatchLayoutStep1   =》只会对动画有意义
            记录View的信息

        布局  dispatchLayoutStep2
            根据数据源中的数据进行布局，真正展示给用户看的最终界面
            如果开启动画，将被挤出屏幕的View的保存到消失动画列表中

        布局后 dispatchLayoutStep3   =》动画完成后，回收View
            清理工作
            保存布局后的view的信息
            触发动画
            动画执行完回收工作


一个合格的LayoutManager，childCount数量不应大于屏幕上显示的Item数量，而scrapCache缓存区域的Item数量应该是0
Recycler类可以简单理解为一个回收管理站，需要View时就向它要，不需要时就丢给它。

回收：
在onLayoutChildren回收View使用detachAndScrap的系列方法，因为onLayoutChildren方法会连续多次调用，detachAndScrap系列的方法就是用在这时候。
在滚动发生后要回收超出屏幕不可见的View时用removeAndRecycle的系列方法。

列表中有两个表项（1、2），删除 2，此时 3 会从屏幕底部平滑地移入并占据原来 2 的位置。
流程：
对于这种情况RecyclerView的策略是“执行两次 layout”：
为动画前的表项先执行一次pre-layout，将不可见的表项 3 也加载到布局中，形成一张布局快照（1、2、3）。
再为动画后的表项执行一次post-layout，同样形成一张布局快照（1、3）。
比对两张快照中表项 3 的位置，就知道它该如何做动画了。

缓存：
    scrap
    scrap仅仅在layout期间不为空。当LayoutManager开始 layout 的时候（pre-layout 或 post-layout），会将所有的viewHolder都放到scrap中。然后一个个再取回来，除非有些view发生了变化。


如果在所有缓存中都没有找到 viewHolder，那就会调用 create 和 bind 方法。
如果在 pool （RecycledViewPool ） 中找到了，那么会调用 bind 方法。
如果在 cache （mCachedViews）中找到了，啥都不用做，直接显示就好了。

notifyDataSetChanged 与 notifyItemRangeChanged 的区别？
   notifyDataSetChanged 会调用 onCreateViewHolder() 和 onBindViewHolder()
   notifyItemRangeChanged 会调用 onBindViewHolder()

RecyclerView 与 ListView 缓存的区别？

如何对一个列表进行性能优化？调用 notifyDataSetChanged 时闪烁的原因？
    原因：是由于整个数据集刷新导致的，所有的列表项都会重新绑定数据和重新绘制

如何理解adapter订阅者模式？
当数据变更时，调用notify**方法时，Adapter内部的被观察者会遍历通知已经注册的观察者的对应方法，这时界面就会响应变更。

RecyclerView性能优化本质是什么？
要减少onCreateViewHolder和onBindViewHolder这两个函数的调用时间和调用的次数

RecyclerView滑动冲突?   RecyclerView嵌套RecyclerView，RecyclerView嵌套ScrollView





